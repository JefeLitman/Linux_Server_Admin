#!/bin/bash

# Version 1.3
# Made by: Edgar RP
# Updated: 2025_03_07 (AAAA_MM_DD)
# Script to list the current users using a GPU and the memory occupied

set -e # To avoid any non-zero output to stop the script
DEV_LOC='DEVICE_TYPE' # Device type can only be a string with 'server', 'proxy' or 'workstation' values
_check_dev "$DEV_LOC" # Checking if the device type is correctly set

#To use this command, it should look like: check_gpus
if [ "$EUID" -eq 0 ] || [ "$DEV_LOC" == "proxy" ]; then
    echo "CAUTION! Only work for user different than root user and is not enabled for proxy devices"
    exit 1
else
    # Get the current tasks running in the GPUs
    TASKS=($(nvidia-smi --query-compute-apps=pid,gpu_bus_id,used_memory --format=csv,noheader,nounits))
    N_TASKS=${#TASKS[@]}

    if [ $N_TASKS -ne 0 ]; then
        echo "Listing the users currently using GPUs"
        echo ""
        echo "========================================================"
        printf " %-10s %-3s  %-20s %-8s\n" "Memory" "GPU" "User" "Memory"
        echo "========================================================"
        for ((i=0 ; i<$N_TASKS ; i=i+3))
        do
            pid=$(echo ${TASKS[$i]} | cut -d ',' -f1)
            gpu=$(echo ${TASKS[(($i+1))]} | cut -d ',' -f1)
            memory=$(echo ${TASKS[(($i+2))]} | cut -d ',' -f1)
            
            user=$(ps -p $pid -o user | tail -n +2)
            gpu_id=($(nvidia-smi -i $gpu --query-gpu=index --format=csv,noheader,nounits))
            printf " %-10s %-3s  %-20s %-8s\n" $pid ${gpu_id[0]} $user "$memory MB"
        done
    else
        echo "No users are currently using GPUs"
    fi
    exit 0
fi
